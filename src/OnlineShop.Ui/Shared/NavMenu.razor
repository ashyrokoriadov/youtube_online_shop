@using OnlineShop.Ui.Components.Abstractions
@inject ILoginStatusManager LoginStatusManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">OnlineShop.Ui</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div> 
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="articles-list">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Articles 
            </NavLink>
        </div> 
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="checkout">
                <span class="oi oi-cart" aria-hidden="true"></span> Checkout
            </NavLink>
        </div>  
        @if (LoginStatusManager.LoginStatus.Token?.IsLoggedIn ?? false)       
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="orders-list">
                    <span class="oi oi-briefcase" aria-hidden="true"></span> Orders
                </NavLink>
            </div>  
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        LoginStatusManager.LoginStatusHasChanged += (o, e) => StateHasChanged();
    }
}
